image_width: 800
image.height: 600
age: 99

skills:
  c++: 1
  java: 1
  android: 1
  python: 1

camera_matrix:
  rows: 3
  cols: 3
  data: [0.998366306112333, -9.79700237956072e-05, 413.446990370928, 0.000102947818586136, 1, 303.526195950735, 0, 0, 0]

distortion_coefficients:
  rows: 1
  cols: 4
  data: [207.782531128881, -0.00199700305313729, 2.61348651211424e-06, -1.17865308413292e-08]

rectification_matrix:
  rows: 3
  cols: 3
  data: [1, 0, 0, 0, 1, 0, 0, 0, 1]

projection_matrix:
  rows: 3
  cols: 4
  data: [0, 0, 0, -0, 0, 0, 0, -0, 0, 0, 0, -0]

Camera.fx: 520.908620
Camera.fy: 521.007327
Camera.cx: 325.141442
Camera.cy: 249.701764

Camera.k1: 0.231222
Camera.k2: -0.784899
Camera.p1: -0.003257
Camera.p2: -0.000105
Camera.k3: 0.917205

# cameraMatrix: !!opencv-matrix 这种格式的的矩阵才可以被  cv::FileStorage 读取
cameraMatrix: !!opencv-matrix
  rows: 3
  cols: 3
  dt: d
  data: [ 1000., 0., 320., 0., 1000., 240., 0., 0., 1. ]

distCoeffs: !!opencv-matrix
  rows: 5
  cols: 1
  dt: d
  data: [ 1.0000000000000001e-01, 1.0000000000000000e-02,
          -1.0000000000000000e-03, 0., 0. ]

features:
  - { x:167, y:49, lbp:[ 1, 0, 0, 1, 1, 0, 1, 1 ] }
  - { x:298, y:130, lbp:[ 0, 0, 0, 1, 0, 0, 1, 1 ] }
  - { x:344, y:158, lbp:[ 1, 1, 0, 0, 0, 0, 1, 0 ] }

key: value
number: 255
seq:
  - first element
  - second element
node_2:
  0: first item
  1: second_item
  2: third_item
  3:
    - 1
    - 3
    - 5
    - 7
    - 9
  key: value

